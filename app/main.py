
import os
import asyncio
import tempfile
import ffmpeg
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode, ChatAction
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.utils.markdown import hbold
from aiogram.fsm.storage.memory import MemoryStorage

BOT_TOKEN = os.getenv("BOT_TOKEN", "")
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "")
if not BOT_TOKEN or not WEBHOOK_URL:
    raise RuntimeError("BOT_TOKEN –∏ WEBHOOK_URL –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã")

bot = Bot(token=BOT_TOKEN, default=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

app = FastAPI()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéß –ê—É–¥–∏–æ"), KeyboardButton(text="üé• –í–∏–¥–µ–æ / –ö—Ä—É–∂–æ–∫")]
    ],
    resize_keyboard=True
)

# –ü–æ–¥–º–µ–Ω—é –∞—É–¥–∏–æ
audio_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéµ –ò–∑–≤–ª–µ—á—å –∑–≤—É–∫ –∏–∑ –≤–∏–¥–µ–æ")],
        [KeyboardButton(text="üîä –ò–∑–≤–ª–µ—á—å –∑–≤—É–∫ –∏–∑ –∫—Ä—É–∂–∫–∞")],
        [KeyboardButton(text="üé§ –ò–∑–≤–ª–µ—á—å –∑–≤—É–∫ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ")],
        [KeyboardButton(text="üéß –ê—É–¥–∏–æ ‚Üí –ì–æ–ª–æ—Å–æ–≤–æ–µ")],
        [KeyboardButton(text="üé¨ –í–∏–¥–µ–æ/–ö—Ä—É–∂–æ–∫ ‚Üí –ì–æ–ª–æ—Å–æ–≤–æ–µ")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# –ü–æ–¥–º–µ–Ω—é –≤–∏–¥–µ–æ/–∫—Ä—É–∂–æ–∫
video_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üé¶ –í–∏–¥–µ–æ ‚Üí –ö—Ä—É–∂–æ–∫")],
        [KeyboardButton(text="üìπ –ö—Ä—É–∂–æ–∫ ‚Üí –í–∏–¥–µ–æ")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
        "–Ø —É–º–µ—é:\n"
        "üéß –†–∞–±–æ—Ç–∞—Ç—å —Å –∞—É–¥–∏–æ (–∏–∑–≤–ª–µ—á–µ–Ω–∏–µ, –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è).\n"
        "üé• –†–∞–±–æ—Ç–∞—Ç—å —Å –≤–∏–¥–µ–æ –∏ –∫—Ä—É–∂–∫–∞–º–∏ (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ).\n\n"
        "–í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=main_kb
    )

@dp.message(F.text == "üéß –ê—É–¥–∏–æ")
async def audio_menu(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∞—É–¥–∏–æ-—Ñ—É–Ω–∫—Ü–∏—é:", reply_markup=audio_kb)

@dp.message(F.text == "üé• –í–∏–¥–µ–æ / –ö—Ä—É–∂–æ–∫")
async def video_menu(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ-—Ñ—É–Ω–∫—Ü–∏—é:", reply_markup=video_kb)

@dp.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_menu(message: Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_kb)

# –ü—Ä–∏–º–µ—Ä: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ ‚Üí –∫—Ä—É–∂–æ–∫
@dp.message(F.text == "üé¶ –í–∏–¥–µ–æ ‚Üí –ö—Ä—É–∂–æ–∫")
async def video_to_circle(message: Message):
    await message.answer("ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ–∫‚Ä¶")
    # —Ç—É—Ç –ª–æ–≥–∏–∫–∞ ffmpeg, —É–ø—Ä–æ—â–µ–Ω–∞
    await message.answer("–ì–æ—Ç–æ–≤–æ ‚úÖ")

@app.post("/webhook")
async def webhook(request: Request):
    data = await request.json()
    update = dp._parse_update(data)
    await dp.feed_update(bot, update)
    return {"ok": True}
